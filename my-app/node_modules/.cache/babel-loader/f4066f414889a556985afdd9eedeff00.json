{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\TravelPlans\\\\DisplayPlan.js\";\nimport axios from \"axios\";\nimport { Component } from \"react\";\nimport moment, { months } from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DisplayPlan extends Component {\n  constructor() {\n    super();\n\n    this.calcuateDays = () => {\n      const days = moment(this.props.PlanDate.endDate).format(\"DD\") - moment(this.props.PlanDate.startDate).format(\"DD\");\n      const months = moment(this.props.PlanDate.endDate).format(\"MM\") - moment(this.props.PlanDate.startDate).format(\"MM\");\n      const years = moment(this.props.PlanDate.endDate).format(\"YYYY\") - moment(this.props.PlanDate.startDate).format(\"YYYY\");\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Days : \", days + 30 * months + 360 * years]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.componentDidMount = () => {\n      axios.post(\"http://localhost:4000/getCities\", this.props.Places).then(RESULT => {\n        this.setState({\n          planData: RESULT.data\n        });\n      });\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return this.state.planData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userPlansInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Start at :\", moment(this.props.EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"End at :\", moment(this.props.EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total of\", \" \", moment(this.props.EachPlan.PlanDate.endDate).format(\"DD\") - moment(this.props.EachPlan.PlanDate.startDate).format(\"DD\"), \" \", \"Days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"total of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"(\", this.props.EachPlan.Places.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this), \" Cities\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"UserPlanCities\",\n        children: this.props.EachPlan.Places.map(city => {\n          return this.renderPlaces(city);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfJoiners\",\n        children: this.props.EachPlan.friends.map(friend => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Joiner\",\n            src: friend.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Join\",\n        onClick: () => {\n          this.JoinPlan(this.props.EachPlan._id);\n        },\n        children: [\"Join this \", this.state.user.userName, \"'s Plan?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["axios","Component","moment","months","DisplayPlan","constructor","calcuateDays","days","props","PlanDate","endDate","format","startDate","years","componentDidMount","post","Places","then","RESULT","setState","planData","data","state","render","EachPlan","length","map","city","renderPlaces","friends","friend","picture","JoinPlan","_id","user","userName"],"sources":["C:/Users/hp/Documents/FinalProject/my-app/src/componets/TravelPlans/DisplayPlan.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport moment, { months } from \"moment\";\r\n\r\nexport default class DisplayPlan extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  calcuateDays = () => {\r\n    const days =\r\n      moment(this.props.PlanDate.endDate).format(\"DD\") -\r\n      moment(this.props.PlanDate.startDate).format(\"DD\");\r\n    const months =\r\n      moment(this.props.PlanDate.endDate).format(\"MM\") -\r\n      moment(this.props.PlanDate.startDate).format(\"MM\");\r\n    const years =\r\n      moment(this.props.PlanDate.endDate).format(\"YYYY\") -\r\n      moment(this.props.PlanDate.startDate).format(\"YYYY\");\r\n    return <h3>Days : {days + 30 * months + 360 * years}</h3>;\r\n  };\r\n  componentDidMount = () => {\r\n    axios\r\n      .post(\"http://localhost:4000/getCities\", this.props.Places)\r\n      .then((RESULT) => {\r\n        this.setState({ planData: RESULT.data });\r\n      });\r\n  };\r\n  render() {\r\n    return this.state.planData ? (\r\n      <div className=\"userPlansInfo\">\r\n        <h3>\r\n          Start at :\r\n          {moment(this.props.EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")}\r\n        </h3>\r\n        <h3>\r\n          End at :\r\n          {moment(this.props.EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")}\r\n        </h3>\r\n        <h3>\r\n          Total of{\" \"}\r\n          {moment(this.props.EachPlan.PlanDate.endDate).format(\"DD\") -\r\n            moment(this.props.EachPlan.PlanDate.startDate).format(\"DD\")}{\" \"}\r\n          Days\r\n        </h3>\r\n        <p>\r\n          total of <strong>({this.props.EachPlan.Places.length})</strong> Cities{\" \"}\r\n        </p>\r\n        <div className=\"UserPlanCities\">\r\n          {this.props.EachPlan.Places.map((city) => {\r\n            return this.renderPlaces(city);\r\n          })}\r\n        </div>\r\n        <span></span>\r\n        <div className=\"listOfJoiners\">\r\n          {this.props.EachPlan.friends.map((friend) => {\r\n            return <img className=\"Joiner\" src={friend.picture} />;\r\n          })}\r\n        </div>\r\n        <button\r\n          className=\"Join\"\r\n          onClick={() => {\r\n            this.JoinPlan(this.props.EachPlan._id);\r\n          }}\r\n        >\r\n          Join this {this.state.user.userName}'s Plan?\r\n        </button>\r\n      </div>\r\n    ) : (\r\n      <h1>Loading</h1>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}