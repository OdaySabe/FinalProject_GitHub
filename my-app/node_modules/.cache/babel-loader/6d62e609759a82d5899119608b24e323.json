{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\TravelPlans\\\\NewPlan.js\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Image from \"../Images/Image\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NewPlan extends Component {\n  constructor() {\n    super();\n\n    this.setCities = cities => {\n      this.setState({\n        cities: cities\n      });\n    };\n\n    this.filterCities = e => {\n      this.props.filteredCities(e.target.value);\n    };\n\n    this.filterContinent = e => {\n      this.props.filterContinent(e.target.value);\n    };\n\n    this.UploadToTheUserPlans = () => {\n      if (this.state.endDate && this.state.startDate && this.state.cities) {\n        this.props.UploadToTheUserPlans(this.state.startDate, this.state.endDate, this.state.cities).then(() => {\n          this.setState({\n            redirect: true\n          });\n        });\n      } else {\n        alert(\"Please full all the inputs first\");\n      }\n    };\n\n    this.state = {\n      startDate: \"\",\n      endDate: \"\",\n      NumberOfDays: 0,\n      cities: [],\n      redirect: false\n    };\n  }\n\n  render() {\n    return this.state.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"Plans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newPlan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"image\",\n            src: this.props.LoggedUser.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select your PlanDate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: \"\",\n            onChange: e => {\n              this.setState({\n                startDate: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: \"\",\n            onChange: e => {\n              console.log(moment(e.target.value).days());\n              this.setState({\n                endDate: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newPlanInputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \" Search city or country\",\n            value: this.props.searchCity,\n            onChange: event => {\n              this.filterCities(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => {\n              this.filterContinent(event);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Contenints\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Asia\",\n              children: \"Asia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Africa\",\n              children: \"Africa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Europe\",\n              children: \"Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"North America\",\n              children: \"North America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"South America\",\n              children: \"South America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Oceania\",\n              children: \"Oceania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.setState({\n                redirect: true\n              });\n            },\n            children: \"Back to plans\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.UploadToTheUserPlans,\n            children: \"Submit Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"your Plan time is : Day from\", \" \", moment(this.state.startDate).format(\"yyyy-mm-dd\"), \" Until\", \" \", moment(this.state.endDate).format(\"yyyy-mm-dd\"), \"Total Days \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        LoggedUser: this.props.LoggedUser,\n        Images: this.props.Images,\n        cities: this.setCities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","Redirect","Image","moment","NewPlan","constructor","setCities","cities","setState","filterCities","e","props","filteredCities","target","value","filterContinent","UploadToTheUserPlans","state","endDate","startDate","then","redirect","alert","NumberOfDays","render","console","log","LoggedUser","picture","days","searchCity","event","format","Images"],"sources":["C:/Users/hp/Documents/FinalProject/my-app/src/componets/TravelPlans/NewPlan.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Image from \"../Images/Image\";\r\nimport moment from \"moment\";\r\nexport default class NewPlan extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      NumberOfDays: 0,\r\n      cities: [],\r\n      redirect: false,\r\n    };\r\n  }\r\n  setCities = (cities) => {\r\n    this.setState({ cities: cities });\r\n  };\r\n  filterCities = (e) => {\r\n    this.props.filteredCities(e.target.value);\r\n  };\r\n  filterContinent = (e) => {\r\n    this.props.filterContinent(e.target.value);\r\n  };\r\n  UploadToTheUserPlans = () => {\r\n    if (this.state.endDate && this.state.startDate && this.state.cities) {\r\n      this.props\r\n        .UploadToTheUserPlans(\r\n          this.state.startDate,\r\n          this.state.endDate,\r\n          this.state.cities\r\n        )\r\n        .then(() => {\r\n          this.setState({ redirect: true });\r\n        });\r\n    } else {\r\n      alert(\"Please full all the inputs first\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.redirect ? (\r\n      <Redirect to=\"Plans\" />\r\n    ) : (\r\n      <div>\r\n        {console.log()}\r\n        <div className=\"newPlan\">\r\n          <div>\r\n            <img className=\"image\" src={this.props.LoggedUser.picture}></img>\r\n\r\n            <h1>Select your PlanDate</h1>\r\n            <label>Start Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              value=\"\"\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  startDate: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <label>End Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value=\"\"\r\n              onChange={(e) => {\r\n                console.log(moment(e.target.value).days());\r\n                this.setState({\r\n                  endDate: e.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"newPlanInputs\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\" Search city or country\"\r\n              value={this.props.searchCity}\r\n              onChange={(event) => {\r\n                this.filterCities(event);\r\n              }}\r\n            ></input>\r\n            <select\r\n              onChange={(event) => {\r\n                this.filterContinent(event);\r\n              }}\r\n            >\r\n              <option value=\"\">All Contenints</option>\r\n              <option value=\"Asia\">Asia</option>\r\n              <option value=\"Africa\">Africa</option>\r\n              <option value=\"Europe\">Europe</option>\r\n              <option value=\"North America\">North America</option>\r\n              <option value=\"South America\">South America</option>\r\n              <option value=\"Oceania\">Oceania</option>\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ redirect: true });\r\n              }}\r\n            >\r\n              Back to plans\r\n            </button>\r\n            <button onClick={this.UploadToTheUserPlans}>Submit Plan</button>\r\n            <h3>\r\n              your Plan time is : Day from{\" \"}\r\n              {moment(this.state.startDate).format(\"yyyy-mm-dd\")} Until{\" \"}\r\n              {moment(this.state.endDate).format(\"yyyy-mm-dd\")}\r\n              Total Days {}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <Image\r\n          LoggedUser={this.props.LoggedUser}\r\n          Images={this.props.Images}\r\n          cities={this.setCities}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}