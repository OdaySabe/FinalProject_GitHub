{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\ListOfUsers\\\\UserPage.js\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Router } from \"express\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserPage extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get(`http://localhost:4000/UserProfile/${this.props.match.match.params.userId}`).then(RESULT => {\n        if (!RESULT.err) {\n          this.setState({\n            user: RESULT.data\n          });\n        }\n      });\n    };\n\n    this.redirect = path => {\n      this.setState({\n        path: path,\n        redirect: true\n      });\n    };\n\n    this.JoinPlan = planId => {\n      axios.post(\"http://localhost:4000/PlanJoin\", {\n        planId: planId,\n        userId: this.props.match.match.params.userId\n      }).then(RESULT => {\n        if (!RESULT.data.err) {\n          this.setState({\n            user: RESULT.data\n          });\n        } else {\n          alert(\"You Alredy Joint it\");\n        }\n      });\n    };\n\n    this.renderPlaces = singleCity => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userPageImage\",\n          src: singleCity.CityimageSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: singleCity.CityDetails.FullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.displayUserPlan = () => {\n      return this.state.user.Plans.map(EachPlan => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userPlansInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Start at :\", moment(EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"End at :\", moment(EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total of\", \" \", moment(EachPlan.PlanDate.endDate).format(\"DD\") - moment(EachPlan.PlanDate.startDate).format(\"DD\"), \" \", \"Days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"total of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"(\", EachPlan.Places.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 22\n            }, this), \" Cities\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"UserPlanCities\",\n            children: EachPlan.Places.map(city => {\n              return this.renderPlaces(city);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listOfJoiners\",\n            children: EachPlan.friends.map(friend => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/UserPage/\" + friend._id,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"Joiner\",\n                  src: friend.picture\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Join\",\n            onClick: () => {\n              this.JoinPlan(EachPlan._id);\n            },\n            children: [\"Join this \", this.state.user.userName, \"'s Plan?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.displayUser = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HomeUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"noPlans\",\n            to: \"/listOfUsers\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"UserPicture\",\n            src: this.state.user.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), this.state.user.Plans.length != 0 ? this.displayUserPlan() : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"noPlans\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [this.state.user.userName, \" not having plans yet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      redirect: false\n    };\n  }\n\n  render() {\n    return this.state.user ? /*#__PURE__*/_jsxDEV(Router, {\n      children: [this.displayUser(), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/UserPage/:userId\",\n        exact: true,\n        render: match => {\n          return /*#__PURE__*/_jsxDEV(UserPage, {\n            match: match\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","axios","moment","Link","Route","Router","UserPage","constructor","componentDidMount","get","props","match","params","userId","then","RESULT","err","setState","user","data","redirect","path","JoinPlan","planId","post","alert","renderPlaces","singleCity","CityimageSrc","CityDetails","FullName","displayUserPlan","state","Plans","map","EachPlan","PlanDate","startDate","format","endDate","Places","length","city","friends","friend","_id","picture","userName","displayUser","render"],"sources":["C:/Users/hp/Documents/FinalProject/my-app/src/componets/ListOfUsers/UserPage.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { Router } from \"express\";\r\nexport default class UserPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/UserProfile/${this.props.match.match.params.userId}`\r\n      )\r\n      .then((RESULT) => {\r\n        if (!RESULT.err) {\r\n          this.setState({ user: RESULT.data });\r\n        }\r\n      });\r\n  };\r\n  redirect = (path) => {\r\n    this.setState({ path: path, redirect: true });\r\n  };\r\n  JoinPlan = (planId) => {\r\n    axios\r\n      .post(\"http://localhost:4000/PlanJoin\", {\r\n        planId: planId,\r\n        userId: this.props.match.match.params.userId,\r\n      })\r\n      .then((RESULT) => {\r\n        if (!RESULT.data.err) {\r\n          this.setState({ user: RESULT.data });\r\n        } else {\r\n          alert(\"You Alredy Joint it\");\r\n        }\r\n      });\r\n  };\r\n  renderPlaces = (singleCity) => {\r\n    return (\r\n      <div>\r\n        <img className=\"userPageImage\" src={singleCity.CityimageSrc} />\r\n        <p>{singleCity.CityDetails.FullName}</p>\r\n      </div>\r\n    );\r\n  };\r\n  displayUserPlan = () => {\r\n    return this.state.user.Plans.map((EachPlan) => {\r\n      return (\r\n        <div className=\"userPlansInfo\">\r\n          <h3>\r\n            Start at :{moment(EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")}\r\n          </h3>\r\n          <h3>\r\n            End at :{moment(EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")}\r\n          </h3>\r\n          <h3>\r\n            Total of{\" \"}\r\n            {moment(EachPlan.PlanDate.endDate).format(\"DD\") -\r\n              moment(EachPlan.PlanDate.startDate).format(\"DD\")}{\" \"}\r\n            Days\r\n          </h3>\r\n          <p>\r\n            total of <strong>({EachPlan.Places.length})</strong> Cities{\" \"}\r\n          </p>\r\n          <div className=\"UserPlanCities\">\r\n            {EachPlan.Places.map((city) => {\r\n              return this.renderPlaces(city);\r\n            })}\r\n          </div>\r\n          <span></span>\r\n          <div className=\"listOfJoiners\">\r\n            {EachPlan.friends.map((friend) => {\r\n              return (\r\n                <Link to={\"/UserPage/\" + friend._id}>\r\n                  <img className=\"Joiner\" src={friend.picture} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\"Join\"\r\n            onClick={() => {\r\n              this.JoinPlan(EachPlan._id);\r\n            }}\r\n          >\r\n            Join this {this.state.user.userName}'s Plan?\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  displayUser = () => {\r\n    return (\r\n      <div className=\"HomeUser\">\r\n        <div className=\"userInfo\">\r\n          <Link className=\"noPlans\" to=\"/listOfUsers\">\r\n            Go Back\r\n          </Link>\r\n          <img className=\"UserPicture\" src={this.state.user.picture} />\r\n        </div>\r\n        {this.state.user.Plans.length != 0 ? (\r\n          this.displayUserPlan()\r\n        ) : (\r\n          <div className=\"noPlans\">\r\n            <h1>{this.state.user.userName} not having plans yet</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return this.state.user ? (\r\n      <Router>\r\n        {this.displayUser()}\r\n        <Route\r\n          path=\"/UserPage/:userId\"\r\n          exact\r\n          render={(match) => {\r\n            return <UserPage match={match} />;\r\n          }}\r\n        ></Route>\r\n      </Router>\r\n    ) : (\r\n      <h1>Loading....</h1>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}