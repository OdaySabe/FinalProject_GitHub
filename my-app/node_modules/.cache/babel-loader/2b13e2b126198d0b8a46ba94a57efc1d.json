{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\Images\\\\Image.js\";\nimport { Component } from \"react\";\nimport SingleImage from \"./SingleImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Image extends Component {\n  constructor() {\n    super();\n\n    this.addASelectedImage = ImageId => {\n      let temp = [...this.state.selectedImages];\n      temp.push(ImageId);\n      this.setState({\n        selectedImages: temp\n      }, () => {\n        this.props.cities(this.state.selectedImages);\n      });\n    };\n\n    this.removeCity = imageName => {\n      let temp = [...this.state.selectedImages];\n\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i].CityDetails.FullName == imageName) {\n          temp.splice(i, 1);\n        }\n      }\n\n      console.log(temp, this.state.selectedImages);\n      this.setState({\n        selectedImages: temp\n      }, () => {\n        this.props.cities(this.state.selectedImages);\n      });\n\n      checkIfHavingPlans = () => {\n        if (this.state.selectedImages != null) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Your Selected Cities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedCites\",\n              children: this.state.selectedImages.map(image => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imageOfSelectedCites\",\n                    src: image.CityimageSrc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: image.CityDetails.FullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.removeCity(image.CityDetails.FullName);\n                    },\n                    children: \"Delete this Image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"citiesContainerForNewPlan\",\n              children: this.props.Images.map(singleCity => {\n                let redFlag = false;\n                {\n                  this.state.selectedImages.map(image => {\n                    if (image._id == singleCity._id) {\n                      redFlag = true;\n                    }\n                  });\n                }\n                return /*#__PURE__*/_jsxDEV(SingleImage, {\n                  detals: singleCity.CityDetails,\n                  imgSRC: singleCity.CityimageSrc,\n                  selectedImages: this.state.selectedImages,\n                  addASelectedImage: this.addASelectedImage,\n                  redFlag: redFlag,\n                  removeCity: this.removeCity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"citiesContainerForNewPlan\",\n            children: this.props.Images.map(singleCity => {\n              return /*#__PURE__*/_jsxDEV(SingleImage, {\n                detals: singleCity.CityDetails,\n                imgSRC: singleCity.CityimageSrc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this);\n        }\n      };\n    };\n\n    this.state = {\n      selectedImages: []\n    };\n  }\n\n  render() {\n    return this.checkIfHavingPlans();\n  }\n\n}","map":{"version":3,"names":["Component","SingleImage","Image","constructor","addASelectedImage","ImageId","temp","state","selectedImages","push","setState","props","cities","removeCity","imageName","i","length","CityDetails","FullName","splice","console","log","checkIfHavingPlans","map","image","CityimageSrc","Images","singleCity","redFlag","_id","render"],"sources":["C:/Users/hp/Documents/FinalProject/my-app/src/componets/Images/Image.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport SingleImage from \"./SingleImage\";\r\n\r\nexport default class Image extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedImages: [],\r\n    };\r\n  }\r\n\r\n  addASelectedImage = (ImageId) => {\r\n    let temp = [...this.state.selectedImages];\r\n    temp.push(ImageId);\r\n    this.setState({ selectedImages: temp }, () => {\r\n      this.props.cities(this.state.selectedImages);\r\n    });\r\n  };\r\n  removeCity = (imageName) => {\r\n    let temp = [...this.state.selectedImages];\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i].CityDetails.FullName == imageName) {\r\n        temp.splice(i, 1);\r\n      }\r\n    }\r\n    console.log(temp, this.state.selectedImages);\r\n    this.setState({ selectedImages: temp }, () => {\r\n      this.props.cities(this.state.selectedImages);\r\n    });\r\n    checkIfHavingPlans = () => {\r\n      if (this.state.selectedImages != null) {\r\n        return (\r\n          <div>\r\n            <hr></hr>\r\n            <h1>Your Selected Cities</h1>\r\n            <div className=\"selectedCites\">\r\n              {this.state.selectedImages.map((image) => {\r\n                return (\r\n                  <div>\r\n                    <img\r\n                      className=\"imageOfSelectedCites\"\r\n                      src={image.CityimageSrc}\r\n                    />\r\n                    <p>{image.CityDetails.FullName}</p>\r\n                    <button\r\n                      onClick={() => {\r\n                        this.removeCity(image.CityDetails.FullName);\r\n                      }}\r\n                    >\r\n                      Delete this Image\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"citiesContainerForNewPlan\">\r\n              {this.props.Images.map((singleCity) => {\r\n                let redFlag = false;\r\n                {\r\n                  this.state.selectedImages.map((image) => {\r\n                    if (image._id == singleCity._id) {\r\n                      redFlag = true;\r\n                    }\r\n                  });\r\n                }\r\n                return (\r\n                  <SingleImage\r\n                    detals={singleCity.CityDetails}\r\n                    imgSRC={singleCity.CityimageSrc}\r\n                    selectedImages={this.state.selectedImages}\r\n                    addASelectedImage={this.addASelectedImage}\r\n                    redFlag={redFlag}\r\n                    removeCity={this.removeCity}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"citiesContainerForNewPlan\">\r\n            {this.props.Images.map((singleCity) => {\r\n              return (\r\n                <SingleImage\r\n                  detals={singleCity.CityDetails}\r\n                  imgSRC={singleCity.CityimageSrc}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n  };\r\n  render() {\r\n    return this.checkIfHavingPlans();\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}