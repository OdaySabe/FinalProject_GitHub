{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\ListOfUsers\\\\UserPage.js\";\nimport { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UserPage extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      axios.get(`http://localhost:4000/UserProfile/${this.props.match.match.params.userId}`).then(RESULT => {\n        if (!RESULT.err) {\n          this.setState({\n            user: RESULT.data\n          });\n        }\n      });\n    };\n\n    this.JoinPlan = planId => {\n      console.log(planId + \"planId\");\n      console.log(this.props.match.match.params.userId + \"userId\");\n      axios.post(\"http://localhost:4000/PlanJoin\", {\n        planId: planId,\n        userId: this.props.match.match.params.userId\n      }).then(RESULT => {\n        console.log(RESULT);\n        this.setState({\n          updateComponent: true\n        });\n      });\n    };\n\n    this.renderPlaces = singleCity => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userPageImage\",\n          src: singleCity.CityimageSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: singleCity.CityDetails.FullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.displayUserPlan = () => {\n      return this.state.user.Plans.map(EachPlan => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userPlansInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Start at :\", moment(EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"End at :\", moment(EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total of\", \" \", moment(EachPlan.PlanDate.endDate).format(\"DD\") - moment(EachPlan.PlanDate.startDate).format(\"DD\"), \" \", \"Days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"total of \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"(\", EachPlan.Places.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 22\n            }, this), \" Cities\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"UserPlanCities\",\n            children: EachPlan.Places.map(city => {\n              return this.renderPlaces(city);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Join\",\n            onClick: () => {\n              this.JoinPlan(EachPlan._id);\n            },\n            children: [\"Join this \", this.state.user.userName, \"'s Plan?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.displayUser = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HomeUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"UserPicture\",\n            src: this.state.user.picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this), this.state.user.Plans.length != 0 ? this.displayUserPlan() : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [this.state.user.userName, \" not having plans yet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return this.state.user ? this.displayUser() : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 51\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","axios","moment","UserPage","constructor","componentDidMount","get","props","match","params","userId","then","RESULT","err","setState","user","data","JoinPlan","planId","console","log","post","updateComponent","renderPlaces","singleCity","CityimageSrc","CityDetails","FullName","displayUserPlan","state","Plans","map","EachPlan","PlanDate","startDate","format","endDate","Places","length","city","_id","userName","displayUser","picture","render"],"sources":["C:/Users/hp/Documents/FinalProject/my-app/src/componets/ListOfUsers/UserPage.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nexport default class UserPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n  componentDidMount = () => {\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/UserProfile/${this.props.match.match.params.userId}`\r\n      )\r\n      .then((RESULT) => {\r\n        if (!RESULT.err) {\r\n          this.setState({ user: RESULT.data });\r\n        }\r\n      });\r\n  };\r\n  JoinPlan = (planId) => {\r\n    console.log(planId + \"planId\");\r\n    console.log(this.props.match.match.params.userId + \"userId\");\r\n    axios\r\n      .post(\"http://localhost:4000/PlanJoin\", {\r\n        planId: planId,\r\n        userId: this.props.match.match.params.userId,\r\n      })\r\n      .then((RESULT) => {\r\n        console.log(RESULT);\r\n        this.setState({ updateComponent: true });\r\n      });\r\n  };\r\n  renderPlaces = (singleCity) => {\r\n    return (\r\n      <div>\r\n        <img className=\"userPageImage\" src={singleCity.CityimageSrc} />\r\n        <p>{singleCity.CityDetails.FullName}</p>\r\n      </div>\r\n    );\r\n  };\r\n  displayUserPlan = () => {\r\n    return this.state.user.Plans.map((EachPlan) => {\r\n      return (\r\n        <div className=\"userPlansInfo\">\r\n          <h3>\r\n            Start at :{moment(EachPlan.PlanDate.startDate).format(\"YYYY/MM/DD\")}\r\n          </h3>\r\n          <h3>\r\n            End at :{moment(EachPlan.PlanDate.endDate).format(\"YYYY/MM/DD\")}\r\n          </h3>\r\n          <h3>\r\n            Total of{\" \"}\r\n            {moment(EachPlan.PlanDate.endDate).format(\"DD\") -\r\n              moment(EachPlan.PlanDate.startDate).format(\"DD\")}{\" \"}\r\n            Days\r\n          </h3>\r\n          <p>\r\n            total of <strong>({EachPlan.Places.length})</strong> Cities{\" \"}\r\n          </p>\r\n          <div className=\"UserPlanCities\">\r\n            {EachPlan.Places.map((city) => {\r\n              return this.renderPlaces(city);\r\n            })}\r\n          </div>\r\n          <button\r\n            className=\"Join\"\r\n            onClick={() => {\r\n              this.JoinPlan(EachPlan._id);\r\n            }}\r\n          >\r\n            Join this {this.state.user.userName}'s Plan?\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  displayUser = () => {\r\n    return (\r\n      <div className=\"HomeUser\">\r\n        <div className=\"userInfo\">\r\n          <img className=\"UserPicture\" src={this.state.user.picture} />\r\n        </div>\r\n        {this.state.user.Plans.length != 0 ? (\r\n          this.displayUserPlan()\r\n        ) : (\r\n          <h1>{this.state.user.userName} not having plans yet</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    return this.state.user ? this.displayUser() : <h1>Loading....</h1>;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}