{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\odays\\\\Desktop\\\\my cod\\\\mycod\\\\mycod\\\\projects\\\\FinalProject\\\\my-app\\\\src\\\\componets\\\\Images\\\\Image.js\";\nimport { Component } from \"react\";\nimport SingleImage from \"./SingleImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Image extends Component {\n  constructor() {\n    super();\n\n    this.addASelectedImage = ImageId => {\n      let temp = [...this.state.selectedImages];\n      temp.push(ImageId);\n      this.setState({\n        selectedImages: temp\n      }, () => {\n        this.props.cities(this.state.selectedImages);\n      });\n    };\n\n    this.removeCity = imageName => {\n      let temp = [...this.state.selectedImages];\n\n      for (let i = 0; i < temp.length; i++) {\n        if (temp[i].CityDetails.FullName == imageName) {\n          temp.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        selectedImages: temp\n      }, () => {\n        this.props.cities(this.state.selectedImages);\n      });\n    };\n\n    this.checkIfHavingPlans = () => {\n      if (this.props.LoggedUser && this.state.selectedImages != null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Your Selected Cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedCites\",\n            children: this.state.selectedImages.map(image => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"imageOfSelectedCites\",\n                  src: image.CityimageSrc\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: image.CityDetails.FullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"deleteTheImage\",\n                  onClick: () => {\n                    this.removeCity(image.CityDetails.FullName);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"citiesContainerForNewPlan\",\n            children: this.props.Images.map(singleCity => {\n              let redFlag = false;\n              {\n                this.state.selectedImages.map(image => {\n                  if (image._id == singleCity._id) {\n                    redFlag = true;\n                  }\n                });\n              }\n              return /*#__PURE__*/_jsxDEV(SingleImage, {\n                detals: singleCity.CityDetails,\n                imgSRC: singleCity.CityimageSrc,\n                selectedImages: this.state.selectedImages,\n                addASelectedImage: this.addASelectedImage,\n                redFlag: redFlag,\n                removeCity: this.removeCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"citiesContainer\",\n          children: this.props.Images.map(singleCity => {\n            return /*#__PURE__*/_jsxDEV(SingleImage, {\n              detals: singleCity.CityDetails,\n              imgSRC: singleCity.CityimageSrc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      selectedImages: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.checkIfHavingPlans(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","SingleImage","Image","constructor","addASelectedImage","ImageId","temp","state","selectedImages","push","setState","props","cities","removeCity","imageName","i","length","CityDetails","FullName","splice","checkIfHavingPlans","LoggedUser","map","image","CityimageSrc","Images","singleCity","redFlag","_id","render"],"sources":["C:/Users/odays/Desktop/my cod/mycod/mycod/projects/FinalProject/my-app/src/componets/Images/Image.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport SingleImage from \"./SingleImage\";\r\n\r\nexport default class Image extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedImages: [],\r\n    };\r\n  }\r\n\r\n  addASelectedImage = (ImageId) => {\r\n    let temp = [...this.state.selectedImages];\r\n    temp.push(ImageId);\r\n    this.setState({ selectedImages: temp }, () => {\r\n      this.props.cities(this.state.selectedImages);\r\n    });\r\n  };\r\n  removeCity = (imageName) => {\r\n    let temp = [...this.state.selectedImages];\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i].CityDetails.FullName == imageName) {\r\n        temp.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    this.setState({ selectedImages: temp }, () => {\r\n      this.props.cities(this.state.selectedImages);\r\n    });\r\n  };\r\n  checkIfHavingPlans = () => {\r\n    if (this.props.LoggedUser && this.state.selectedImages != null) {\r\n      return (\r\n        <div>\r\n          <hr></hr>\r\n          <h1>Your Selected Cities</h1>\r\n          <div className=\"selectedCites\">\r\n            {this.state.selectedImages.map((image) => {\r\n              return (\r\n                <div>\r\n                  <img\r\n                    className=\"imageOfSelectedCites\"\r\n                    src={image.CityimageSrc}\r\n                  />\r\n                  <p>{image.CityDetails.FullName}</p>\r\n                  <button\r\n                    className=\"deleteTheImage\"\r\n                    onClick={() => {\r\n                      this.removeCity(image.CityDetails.FullName);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <hr></hr>\r\n          <div className=\"citiesContainerForNewPlan\">\r\n            {this.props.Images.map((singleCity) => {\r\n              let redFlag = false;\r\n              {\r\n                this.state.selectedImages.map((image) => {\r\n                  if (image._id == singleCity._id) {\r\n                    redFlag = true;\r\n                  }\r\n                });\r\n              }\r\n              return (\r\n                <SingleImage\r\n                  detals={singleCity.CityDetails}\r\n                  imgSRC={singleCity.CityimageSrc}\r\n                  selectedImages={this.state.selectedImages}\r\n                  addASelectedImage={this.addASelectedImage}\r\n                  redFlag={redFlag}\r\n                  removeCity={this.removeCity}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"citiesContainer\">\r\n          {this.props.Images.map((singleCity) => {\r\n            return (\r\n              <SingleImage\r\n                detals={singleCity.CityDetails}\r\n                imgSRC={singleCity.CityimageSrc}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.checkIfHavingPlans()} </div>;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}